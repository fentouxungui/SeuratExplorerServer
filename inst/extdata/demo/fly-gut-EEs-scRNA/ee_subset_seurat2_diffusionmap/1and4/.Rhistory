DoHeatmap(object = cds, genes.use = top10$gene, slim.col.label = TRUE, remove.key = TRUE)
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, remove.key = TRUE)
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,remove.key = TRUE)
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.5,remove.key = TRUE)
all.markers %>% group_by(cluster)
all.markers
summary(all.markers$p_val_adj)
summary(all.markers$p_val_adj < 0)
summary(all.markers$p_val_adj < 0.05)
summary(all.markers$p_val_adj < 0.01)
cds <- RunDiffusion(cds,genes.use = top30$gene)
DMPlot(cds)
top100 <- all.markers %>% group_by(cluster) %>% top_n(100, avg_logFC)
cds <- RunDiffusion(cds,genes.use = top100$gene)
DMPlot(cds)
unique(all.markers$gene)
cds <- RunDiffusion(cds,genes.use = unique(all.markers$gene))
DMPlot(cds)
cds <- RunDiffusion(cds)
DMPlot(cds)
cds <- RunDiffusion(cds,dims.use = 1:20)
DMPlot(cds)
cds <- readRDS("/data2/shared_data_backup/yc/ee/ee_seurat2_yangfu/G101_PC20res04.rds")
table(cds@meta.data$res.0.4)
cds <- readRDS("/data2/shared_data_backup/yc/ee/ee_seurat2_yangfu/G101_PC20res04.rds")
?FeaturePlot
FeaturePlot(cds,features.plot = "Dl")
cds@meta.data[1:3,]
FeaturePlot(cds,features.plot = "nGene")
FeaturePlot(cds,features.plot = "nUMI")
FeaturePlot(cds,features.plot = "percent.mito")
subset(cds@meta.data,res.0.4 == 0)
subset(cds@meta.data,res.0.4 == 0)[,"nUMI"]
mean(subset(cds@meta.data,res.0.4 == 0)[,"nUMI"])
cds@meta.data[1:3,]
mean(subset(cds@meta.data,res.0.4 == 0)[,"percent.mito"])
mean(subset(cds@meta.data,res.0.4 == 1)[,"percent.mito"])
mean(subset(cds@meta.data,res.0.4 == 3)[,"percent.mito"])
FeaturePlot(cds,features.plot = c("nGene","nUMI","percent.mito"))
?FeaturePlot
FeaturePlot(cds,features.plot = c("nGene","nUMI","percent.mito"),cols.use = c("gray", "red"))
FeaturePlot(cds,features.plot = c("nGene","nUMI","percent.mito"),
cols.use = c("gray", "red"),no.legend = FALSE)
FeaturePlot(cds,features.plot = c("nGene","nUMI","percent.mito","res.0.4"),
cols.use = c("gray", "red"),no.legend = FALSE)
FeaturePlot(cds,features.plot = c("nGene","nUMI","percent.mito","res.0.4"),
cols.use = c("gray", "red"),no.legend = FALSE)
str(cds)
cds[['percent.mito']]
cds <- readRDS("/data2/shared_data_backup/yc/ee/ee_seurat2_yangfu/G101_PC20res04.rds")
FeaturePlot(cds,features.plot = "esg")
FeaturePlot(cds,features.plot = "Tk")
FeaturePlot(cds,features.plot = "Dl")
FeaturePlot(cds,features.plot = c("nGene","nUMI","percent.mito"),
cols.use = c("gray", "red"),no.legend = FALSE)
FeaturePlot(cds,features.plot = "stg")
FeaturePlot(cds,features.plot = "esg")
FeaturePlot(cds,features.plot = c("Tk","AstC")
FeaturePlot(cds,features.plot = c("Tk","AstC"))
FeaturePlot(cds,features.plot = c("Tk","AstC"))
FeaturePlot(cds,features.plot = c("Tk","AstC","stg","esg"))
FeaturePlot(cds,features.plot = c("Tk","AstC","stg","esg","N"))
FeaturePlot(cds,features.plot = c("Tk","AstC","stg","esg","N","cdc14"))
FeaturePlot(cds,features.plot = c("E(spl)m8-HLH"))
FeaturePlot(cds,features.plot = c("E(spl)m8-HLH","E(spl)malpha−BFM"))
FeaturePlot(cds,features.plot = c("E(spl)mbeta-HLH","E(spl)malpha−BFM"))
cds@var.genes
"E(spl)malpha−BFM" %in% cds@var.genes
FeaturePlot(cds,features.plot = c("E(spl)mbeta-HLH"))
FeaturePlot(cds,features.plot = c("E(spl)mbeta-HLH","E(spl)m5-HLH"))
FeaturePlot(cds,features.plot = c("E(spl)mbeta-HLH","E(spl)m8-HLH"))
dim(cds)
dim(cds@raw.data)
cds@meta.data
cds@raw.data["E(spl)m8-HLH",]
cds@assay
str(cds)
cds@raw.data@Dimnames
cds@raw.data@Dimnames[1]
"E(spl)m8-HLH" %in% cds@raw.data@Dimnames[1]
genes_list <- read.delim(file = "gene_list_for_clusters.txt",header = FALSE)
genes_list
DoHeatmap(object = cds, features = genes_list$V1) + NoLegend()
?DoHeatmap
DoHeatmap(object = cds, genes.use = genes_list$V1) + NoLegend()
DoHeatmap(object = cds, genes.use = genes_list$V1)
DoHeatmap(object = cds, genes.use = genes_list$V1,slim.col.label = TRUE, remove.key = TRUE)
DoHeatmap(object = cds, genes.use = genes_list$V1,slim.col.label = TRUE, remove.key = TRUE,group.spacing = 0.3)
DoHeatmap(object = cds, genes.use = genes_list$V1,slim.col.label = TRUE, remove.key = TRUE,group.spacing = 0.3,group.cex = 10)
DoHeatmap(object = cds, genes.use = genes_list$V1,slim.col.label = TRUE, remove.key = TRUE,group.spacing = 0.4,group.cex = 10)
DoHeatmap
figrure <- DoHeatmap(object = cds, genes.use = genes_list$V1,slim.col.label = TRUE,
remove.key = TRUE,group.spacing = 0.4,group.cex = 10,do.plot = FALSE)
figure <- DoHeatmap(object = cds, genes.use = genes_list$V1,slim.col.label = TRUE,
remove.key = TRUE,group.spacing = 0.4,group.cex = 10,do.plot = FALSE)
pheatmap::pheatmap(figure)
?pheatmap
figure
str(figure)
pheatmap::pheatmap(figure[1])
pheatmap::pheatmap(figure@data)
DoHeatmap
?DoHeatmap
cds@scale.data
cds@ident
length(cds@ident)
dim(cds@scale.data)
dim(cds@scale.data)[genes_list$V1,]
cds@scale.data[genes_list$V1,]
data_1 <- cds@scale.data[genes_list$V1,]
data_1[,cds@ident == 10]
dim(data_1[,cds@ident == 10])
mead(data_1[,cds@ident == 10])
mean(data_1[,cds@ident == 10])
apply(data_1[,cds@ident == 10], 1, mean)
genes_list$V1
cds@scale.data[Dl,]
cds@scale.data["Dl",]
cds@scale.data["Dl",1]
cds@scale.data["Dl",1:10]
data_1[,1:10]
rownames(cds@scale.data)
"Dl" %in% rownames(cds@scale.data)
cds@scale.data[rownames(cds@scale.data) == "Dl",]
data_2 <- cds@scale.data[rownames(cds@scale.data) == genes_list$V1,]
data_2 <- cds@scale.data[rownames(cds@scale.data) %in% genes_list$V1,]
data_2
rownames(data_2)
data_1 <- cds@scale.data[rownames(cds@scale.data) %in% genes_list$V1,]
data_1[,1:3]
apply(data_1[,cds@ident == 10], 1, mean)
results <- data.frame(0 <- apply(data_1[,cds@ident == 0], 1, mean))
results <- data.frame(0 = apply(data_1[,cds@ident == 0], 1, mean))
results <- data.frame("0" = apply(data_1[,cds@ident == 0], 1, mean))
for (i in 1:10) {
tmp <- apply(data_1[,cds@ident == i], 1, mean)
results$i <- tmp
}
results
?append
results <- data.frame("0" = apply(data_1[,cds@ident == 0], 1, mean))
results
for (i in 1:10) {
results$tmp <- apply(data_1[,cds@ident == i], 1, mean)
colnames(results)[i+1] <- paste("Cluster_",i,sep = "")
}
results
results <- data.frame("Cluster_0" = apply(data_1[,cds@ident == 0], 1, mean))
for (i in 1:10) {
results$tmp <- apply(data_1[,cds@ident == i], 1, mean)
colnames(results)[i+1] <- paste("Cluster_",i,sep = "")
}
pheatmap::pheatmap(results)
?pheatmap
pheatmap
pheatmap::pheatmap
pheatmap::pheatmap(results,breaks = c(-2,-1,0,1,2))
pheatmap::pheatmap(results,breaks = c(-2,-1,0,1,2),color=colorRampPalette(rev(brewer.pal(n = 7, name =
"RdYlBu")))(100))
pheatmap::pheatmap(results,breaks = c(-2,-1,0,1,2),color=c(red,blue))
pheatmap::pheatmap(results,breaks = c(-2,-1,0,1,2),color=c("red","blue"))
colorRampPalette
pheatmap::pheatmap(results,breaks = c(-2,-1,0,1,2),color=colorRampPalette(rev(brewer.pal(n = 7, name =
"RdYlBu")))(100))
pheatmap::pheatmap(results,breaks = c(-2,-1,0,1,2),color=colorRampPalette(c("blue", "white", "red")(n=200))
pheatmap::pheatmap(results,breaks = c(-2,-1,0,1,2),color=colorRampPalette(c("blue", "white", "red")(n=200))
)
pheatmap::pheatmap(results,breaks = c(-2,-1,0,1,2),color=colorRampPalette(c("blue", "white", "red")(n=200)))
pheatmap::pheatmap(results,breaks = c(-2,-1,0,1,2),color=colorRampPalette(c("blue", "white", "red")))
colorRampPalette(c("blue", "white", "red")
)
#setting colors
my_palette <- colorRampPalette(c("blue", "white", "red"))(n = 201)
breaks = c(seq(-2, 2, length.out = 101),seq(2.01, 8, length.out = 101))
breaks2 <- breaks
#setting colors
my_palette <- colorRampPalette(c("blue", "white", "red"))(n = 201)
length(breaks)
expressionData  <- results
max(max(expressionData),max(breaks))
breaks2
breaks2[length(breaks)]
breaks2[length(breaks)] <- max(max(expressionData),max(breaks))
breaks2[1] <- min(min(expressionData),min(breaks))
#running pheatmap with 10 first samples
pheatmap(expressionData[1:10, ], color = my_palette, breaks = breaks2)
#running pheatmap with 10 first samples
pheatmap::pheatmap(expressionData[1:10, ], color = my_palette, breaks = breaks2)
#running pheatmap with 10 first samples
pheatmap::pheatmap(expressionData[1:10, ], color = my_palette, breaks = breaks)
my_palette
#setting colors
my_palette <- c(colorRampPalette(c("blue", "white", "red"))(n = 101),rep("#FF0000",101))
my_palette
breaks2[length(breaks)] <- max(max(expressionData),max(breaks))
breaks2[1] <- min(min(expressionData),min(breaks))
#running pheatmap with 10 first samples
pheatmap::pheatmap(expressionData[1:10, ], color = my_palette, breaks = breaks)
breaks = c(seq(-2, 2, length.out = 201),seq(2.01, 8, length.out = 101))
breaks2 <- breaks
#setting colors
my_palette <- c(colorRampPalette(c("blue", "white", "red"))(n = 201),rep("#FF0000",101))
breaks2[length(breaks)] <- max(max(expressionData),max(breaks))
breaks2[1] <- min(min(expressionData),min(breaks))
#running pheatmap with 10 first samples
pheatmap::pheatmap(expressionData[1:10, ], color = my_palette, breaks = breaks)
breaks
my_palette
my_palette <- c(colorRampPalette(c("blue", "white", "#FF8787"))(n = 201),colorRampPalette(c("#FF8787","#FF0000"))(n = 101))
my_palette
#running pheatmap with 10 first samples
pheatmap::pheatmap(expressionData[1:10, ], color = my_palette, breaks = breaks)
#running pheatmap with 10 first samples
pheatmap::pheatmap(expressionData, color = my_palette, breaks = breaks)
expressionData  <- results
breaks = c(seq(-2, 2, length.out = 201),seq(2.01, 8, length.out = 101))
breaks2 <- breaks
#setting colors
#my_palette <- c(colorRampPalette(c("blue", "white", "red"))(n = 201),rep("#FF0000",101))
my_palette <- c(colorRampPalette(c("blue", "white", "#FF8787"))(n = 201),colorRampPalette(c("#FF8787","#FF0000"))(n = 101))
#breaks2[length(breaks)] <- max(max(expressionData),max(breaks))
#breaks2[1] <- min(min(expressionData),min(breaks))
#running pheatmap with 10 first samples
pheatmap::pheatmap(expressionData, color = my_palette, breaks = breaks)
############# E(spl) genes #################
espl <- read.delim(file = "Espl_genes_FlyBas.txt")
espl
espl$SYMBOL %in% rownames(data_1)
rownames(data_1)
espl$SYMBOL %in% rownames(cds@scale.data)
"E(spl)1" %in% rownames(cds@scale.data)
"E(spl)m5-HLH" %in% rownames(cds@scale.data)
"E(spl)m8-HLH" %in% rownames(cds@scale.data)
"E(spl)m8-HLH" %in% rownames(cds@scale.data)
espl$SYMBOL %in% rownames(cds@scale.data)
espl$SYMBOL[espl$SYMBOL %in% rownames(cds@scale.data)]
genes_espl <- as.character(espl$SYMBOL[espl$SYMBOL %in% rownames(cds@scale.data)])
FeaturePlot(object = pbmc, features.plot = genes_espl, cols.use = c("grey", "blue"),
reduction.use = "tsne")
FeaturePlot(object = cds, features.plot = genes_espl, cols.use = c("grey", "blue"),
reduction.use = "tsne")
"E(spl)m8" %in% rownames(cds@scale.data)
"E(spl)m8*" %in% rownames(cds@scale.data)
"E(spl)m3*" %in% rownames(cds@scale.data)
"E(spl)m3"* %in% rownames(cds@scale.data)
match("E(spl)m3",rownames(cds@scale.data))
"E(spl)m3" %pin% rownames(cds@scale.data)
library(arules)
install.packages("arules")
library(arules)
"E(spl)m3" %pin% rownames(cds@scale.data)
?%pin%
?match
pmatch("E(spl)m3",rownames(cds@scale.data))
rownames(cds@scale.data)[1860]
?pmatch
pmatch("me",c("mean", "me","mode"))
pmatch("me",c("mean", "mae","mode"))
pmatch("me",c("mean", "mae","mode","medd"))
pmatch(c("","ab","ab"), c("abc","ab"), dup = FALSE)
"E(spl)m3" %pin% rownames(cds@scale.data)
"E(spl)m3" %ain% rownames(cds@scale.data)
?arules
pmatch
grep("E(spl)m3",rownames(cds@scale.data))
grep("E(spl)m3*",rownames(cds@scale.data))
grep("E(spl)m3\*",rownames(cds@scale.data))
grep("E(spl)m3/*",rownames(cds@scale.data))
pmatch("E(spl)m3",rownames(cds@scale.data))
grep("E(spl)m3/*",rownames(cds@scale.data))
rownames(cds@scale.data)
typeof(rownames(cds@scale.data))
grep("E(spl)m3",rownames(cds@scale.data))
grep("[E(spl)m3]",rownames(cds@scale.data))
grep("^E(spl)m3",rownames(cds@scale.data))
for (i in rownames(cds@scale.data)) {
pmatch("E(spl)m3",i)
}
for (i in rownames(cds@scale.data)) {
print(pmatch("E(spl)m3",i))
}
for (i in rownames(cds@scale.data)) {
if(is.na(pmatch("E(spl)m3",i)) = FALSE){print(i)}
}
for (i in rownames(cds@scale.data)) {
ifelse(is.na(pmatch("E(spl)m3"),,print(i)))
}
for (i in rownames(cds@scale.data)) {
for (i in rownames(cds@scale.data)) {
if(!pmatch("E(spl)m3",i) == "NA"){print(i)}
}
pmatch("E(spl)m3",i)
is.na(pmatch("E(spl)m3",i))
for (i in rownames(cds@scale.data)) {
if(!is.na(pmatch("E(spl)m3",i))){print(i)}
}
for (i in rownames(cds@scale.data)) {
if(!is.na(pmatch("E(spl)",i))){print(i)}
}
for (i in rownames(cds@scale.data)) {
if(!is.na(pmatch("ros",i))){print(i)}
}
"pros" %in% rownames(cds@scale.data)
?pmatch
for (i in rownames(cds@scale.data)) {
if(!is.na(pmatch("E(spl)",i))){print(i)}
}
figure <- DoHeatmap(object = cds, genes.use = genes_list$V1,slim.col.label = TRUE,
remove.key = TRUE,group.spacing = 0.4,group.cex = 10,do.plot = FALSE)
pheatmap::pheatmap(figure@data)
########  diffusionmap ###########
cds_sub_14578 <- SubsetData(cds,ident.use = c(1,4,8,5,7))
cds_sub_14578 <- RunDiffusion(cds_sub_14578)
DMplot(cds_sub_14578)
DMPlot(cds_sub_14578)
########  diffusion map ###########
cds_sub_13457 <- SubsetData(cds,ident.use = c(1,4,3,5,7))
cds_sub_13457 <- RunDiffusion(cds_sub_13457)
DMPlot(cds_sub_13457)
cds_sub_01348 <- SubsetData(cds,ident.use = c(0,1,3,4,8))
cds_sub_01348 <- RunDiffusion(cds_sub_01348)
DMPlot(cds_sub_01348)
########## pheatmap_peptide ############
peptide <- read.delim(file="peptide.txt")
peptide
########## pheatmap_peptide ############
peptide <- read.delim(file="peptide.txt",header = FALSE)
peptide
data_peptide <- cds@scale.data[rownames(cds@scale.data) %in% peptide$V1,]
results <- data.frame("Cluster_0" = apply(data_peptide[,cds@ident == 0], 1, mean))
for (i in 1:10) {
results$tmp <- apply(data_peptide[,cds@ident == i], 1, mean)
colnames(results)[i+1] <- paste("Cluster_",i,sep = "")
}
expressionData  <- results
breaks = c(seq(-2, 2, length.out = 201),seq(2.01, 8, length.out = 101))
breaks2 <- breaks
#setting colors
#my_palette <- c(colorRampPalette(c("blue", "white", "red"))(n = 201),rep("#FF0000",101))
my_palette <- c(colorRampPalette(c("blue", "white", "#FF8787"))(n = 201),colorRampPalette(c("#FF8787","#FF0000"))(n = 101))
#breaks2[length(breaks)] <- max(max(expressionData),max(breaks))
#breaks2[1] <- min(min(expressionData),min(breaks))
#running pheatmap with 10 first samples
pheatmap::pheatmap(expressionData, color = my_palette, breaks = breaks)
pheatmap::pheatmap(results)
#breaks2[length(breaks)] <- max(max(expressionData),max(breaks))
#breaks2[1] <- min(min(expressionData),min(breaks))
#running pheatmap with 10 first samples
pheatmap::pheatmap(expressionData, color = my_palette, breaks = breaks)
########## pheatmap_transcript_factor ############
peptide <- read.delim(file="transcript_factor.txt",header = FALSE)
########## pheatmap_transcript_factor ############
transcript <- read.delim(file="transcript_factor.txt",header = FALSE)
transcript
data_peptide <- cds@scale.data[rownames(cds@scale.data) %in% transcript$V1,]
data_transcript <- cds@scale.data[rownames(cds@scale.data) %in% transcript$V1,]
results <- data.frame("Cluster_0" = apply(data_transcript[,cds@ident == 0], 1, mean))
for (i in 1:10) {
results$tmp <- apply(data_transcript[,cds@ident == i], 1, mean)
colnames(results)[i+1] <- paste("Cluster_",i,sep = "")
}
pheatmap::pheatmap(results)
TSNEPlot(cds, do.label = TRUE, pt.size = 0.5)
devtools::install_version(package = 'Seurat', version = package_version('2.3.0'))
install.packages('Seurat')
library(Seurat)
cds <- readRDS("/data2/shared_data_backup/yc/ee/ee_seurat2_yangfu/G101_PC20res04.rds")
TSNEPlot(object = cds,do.label = TRUE)
all.markers <- FindAllMarkers(object = cds, only.pos = TRUE, thresh.use = 0.25,min.pct = 0.25)
library(dplyr)
top30 <- all.markers %>% group_by(cluster) %>% top_n(30, avg_logFC)
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.5,remove.key = TRUE)
?DoHeatmap
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.5,remove.key = TRUE,
col.low = "#3336FF",col.mid = "#000000", col.high = "#FF6433")
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.5,remove.key = TRUE,
col.low = "#3336FF",col.mid = "#FFFFFF", col.high = "#FF6433")
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.5,remove.key = F,
col.low = "#3336FF",col.mid = "#FFFFFF", col.high = "#FF6433")
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.5,remove.key = F,
rotate.key = T,col.low = "#3336FF",col.mid = "#FFFFFF", col.high = "#FF6433")
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.5,remove.key = F,
group.label.loc = "top",rotate.key = T,col.low = "#3336FF",col.mid = "#FFFFFF", col.high = "#FF6433")
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.5,remove.key = F,
group.label.loc = "top",rotate.key = T,col.low = "#3336FF",col.mid = "#FFFFFF", col.high = "#FF0000")
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.5,remove.key = F,
group.label.loc = "top",rotate.key = T,col.low = "#87D4FB",col.mid = "#FFFFFF", col.high = "#FF0000")
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.5,remove.key = F,
group.label.loc = "top",rotate.key = T,col.low = "#616FE0",col.mid = "#FFFFFF", col.high = "#FF0000")
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.2,remove.key = F,
group.label.loc = "top",rotate.key = T,col.low = "#616FE0",col.mid = "#FFFFFF", col.high = "#FF0000")
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,
col.low = "#616FE0",col.mid = "#FFFFFF", col.high = "#FF0000")
DoHeatmap(object = cds, genes.use = top30$gene, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
?pheatmap
genes_list
genes_list <- read.delim(file = "gene_list_for_clusters.txt",header = FALSE)
genes_list
########## pheatmap_peptide ############
peptide <- read.delim(file="peptide.txt",header = FALSE)
peptide
DoHeatmap(object = cds, genes.use = peptide$V1, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
########## pheatmap_transcript_factor ############
transcript <- read.delim(file="transcript_factor.txt",header = FALSE)
transcript
DoHeatmap(object = cds, genes.use = transcript$V1, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
genes_peptide <- c("Mip","NPF","Nplp2","Tk","Dh31","CCAP","ITP","CCHa2","AstA","CCHa1","AstC")
group_order <- c(7,1,4,3,10,9,6,2,5,0,8)
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,group.order = group_order,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
TSNEPlot(object = cds,do.label = TRUE)
genes_peptide <- c("Tk","Dh31","CCAP","Mip","NPF","Nplp2","ITP","CCHa2","AstA","CCHa1","AstC")
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,group.order = group_order,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
genes_peptide <- c("Tk","Dh31","NPF","Nplp2","Mip","CCAP","ITP","CCHa2","AstA","CCHa1","AstC")
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,group.order = group_order,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
group_order <- c(7,1,4,3,10,5,0,8,9,6,2)
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,group.order = group_order,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
group_order <- c(7,1,4,3,10,2,9,6,5,0,8)
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,group.order = group_order,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
group_order <- c(7,1,4,3,10,5,2,9,6,0,8)
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,group.order = group_order,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
group_order <- c(7,1,4,3,10,9,6,2,5,0,8)
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,group.order = group_order,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
?DoHeatmap
########## pheatmap_transcript_factor ############
transcript <- read.delim(file="transcript_factor.txt",header = FALSE)
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,group.order = group_order,
disp.min = -2, disp.max = 2,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = T,cex.col = 5,group.order = group_order,
disp.min = -1.5, disp.max = 1.5,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = FALSE,cex.col = 5,group.order = group_order,
disp.min = -1.5, disp.max = 1.5,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = FALSE,cex.col = 5,group.order = group_order,
disp.min = -2, disp.max = 2,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
TSNEPlot(object = cds,do.label = TRUE)
FeaturePlot(object = cds, features.plot = "Tk", cols.use = c("gray", "blue"),
reduction.use = "tsne")
TSNEPlot(object = cds,do.label = TRUE)
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 10,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = FALSE,cex.col = 5,group.order = group_order,
disp.min = -2, disp.max = 2,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 5,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = FALSE,cex.col = 5,group.order = group_order,
disp.min = -2, disp.max = 2,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
DoHeatmap(object = cds, genes.use = genes_peptide, slim.col.label = TRUE, group.cex = 8,group.spacing = 0.1,
remove.key = F,group.label.loc = "top",rotate.key = FALSE,cex.col = 5,group.order = group_order,
disp.min = -2, disp.max = 2,
col.low = "#616FE0",col.mid = "#F0F0F0", col.high = "#FF0000")
setwd("/data2/shared_data_backup/yc/ee/ee_seurat2_after_yangfu/ee_subset_seurat2_diffusionmap")
cds <- readRDS("../../ee_seurat2_yangfu/G101_PC20res04.rds")
cds <- SubsetData(cds,ident.use = c(1,4))
cds
cds@var.genes
cds <- NormalizeData(cds)
cds <- ScaleData(cds)
cds <- FindVariableGenes(cds)
length(x = cds@var.genes)
cds@meta.data[1:3,]
cds <- ScaleData(cds, vars.to.regress = c("nUMI", "percent.mito"))
cds <- FindVariableGenes(cds)
length(x = cds@var.genes)
cds <- RunPCA(object = cds, pc.genes = cds@var.genes, do.print = TRUE, pcs.print = 1:5,
genes.print = 5)
PCAPlot(object = cds, dim.1 = 1, dim.2 = 2)
cds <- JackStraw(object = cds, num.replicate = 100, display.progress = FALSE)
JackStrawPlot(object = cds, PCs = 1:12)
PCElbowPlot(object = cds)
cds <- RunDiffusion(cds,dims.use = 1:12)
?dmplot
DMPlot(cds)
cds <- RunDiffusion(cds,dims.use = 1:5)
DMPlot(cds)
cds <- RunDiffusion(cds,dims.use = 1:12)
DMPlot(cds)
cds <- RunDiffusion(cds,genes.use = cds@var.genes)
DMPlot(cds)
cds@var.genes
write.csv(cds@var.genes,file = "var.genes.csv")
cds <- RunDiffusion(cds,genes.use = cds@var.genes)
pdf(file = "diffusionmap_by_seurat2_using_var.genes.pdf")
DMPlot(cds)
dev.off()
